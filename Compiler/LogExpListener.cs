//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from LogExp.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LogExpParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface ILogExpListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogExpParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] LogExpParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogExpParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] LogExpParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogExpParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExp([NotNull] LogExpParser.ExpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogExpParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExp([NotNull] LogExpParser.ExpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogExpParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSign([NotNull] LogExpParser.SignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogExpParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSign([NotNull] LogExpParser.SignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogExpParser.logExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogExp([NotNull] LogExpParser.LogExpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogExpParser.logExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogExp([NotNull] LogExpParser.LogExpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogExpParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperand([NotNull] LogExpParser.OperandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogExpParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperand([NotNull] LogExpParser.OperandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogExpParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] LogExpParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogExpParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] LogExpParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LogExpParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] LogExpParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LogExpParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] LogExpParser.IdContext context);
}
